Linux简介
- - - - - - - - - - - — - - - - - - - - - - - 
  Linux 内核版本 与 发行版本

  2.6.18 主版本-次版本-末版本

  redhat,Centos(完全免费),ubuntu

  fedora：个人版。功能更强大，但是不是稳定版本。

- - - - - - - - - - - — - - - - - - - - - - - 
开源软件
	Apache：羽毛，把写好的网站发布到互联网上
	NGINX：同Apache功能差不多，但支持更高的并发。
	MySQL/php
	
	开源软件不一定免费，一般免费。
应用领域
	企业服务器
	嵌入式领域
	ssh:linux之间远程通信,通过ssh连接远程linux用户。
学习方法
	1.linux帮助文档
- - - - - - - - - - - — - - - - - - - - - - - 
linux与windows的不同
	1.Linux严格区分大小写，windows的dos命令是不区分
	2.Linux中所有内容以文件形式保存，包括硬件、用户。
	3.永久存在，不是临时的，都需要用硬件启动。
	4.Linux不靠扩展名区分文件类型，不区分扩展名，通过文件的权限来区分的。
		一些约定俗称的扩展名：
		1.*.gz,*.bz2,.tgz——压缩包（压缩方法不同）
		2.*.rpm——-二进制软件包
		3.*.sh——脚本文件
		4.*.conf———配置文件

	5.windows下的程序不能直接在Linux中安装和运行。

- - - - - - - - - - - — - - - - - - - - - - - 
字符界面的优势
	1.占用系统资源更少，让操作系统更稳定
	2.字符界面减少了出错（起的服务少），被攻击的可能性。

- - - - - - - - - - - — - - - - - - - - - - - 
分区类型
	主分区：最多只能有4个。
	扩展分区：
       最多只能1个，主分区加扩展分区最多4个，不能写入数据，只可以包含逻辑分区。大分区里有小分区。
	逻辑分区


格式化
	不是清空数据（这是附带的操作），本质是写入文件系统。根据用户选定的文件系统，如FAT16,FAT32,NTFS...在磁盘特定区域写入特定数据，在分区中划出一片用于存放文件分配表，目录表等用于文件管理的磁盘空间。

- - - - - - - - - - - — - - - - - - - - - - - 
分区设备文件名与挂载
	/dev，其中/为根目录

设备文件名
	/dev/hda1 （IDE硬盘接口）a代表第一个硬盘，b第二块。1代表第一个分区。

	/dev/sda1 （SCSI硬盘接口，SATA串口硬盘接口）
	
	主分区，1234，逻辑分区一定从5开始。

挂载，挂载点
	挂载：把盘符和分区结合到一起的过程。
	挂载点：把目录称作挂载点，也就是盘符。
	可以当做盘符，如windows的CD盘。
	/boot分区，启动分区。
	/根分区
	/swap分区
=============================================
快捷键
	
	ctrl+c  强制当前命令
	ctrl+l  清屏
	ctrl+a  光标移动到命令行首
	ctrl+e  光标移动到命令行尾
	ctrl+u  从光标所在位置删除到行首
	ctrl+z  把命令放入后台
	ctrl+r  在历史命令中搜索
	tab可以按两下，目录补全。
	在帮助文档中敲入/-b ，则跳转到-b出，n是往下，N是往上


=============================================
Linux通配符
	
	*	匹配任意内容
	?	匹配任意一个字符
	[]	匹配任意一个中括号内的字符
	
=============================================

Linux常用命令

命令基本格式
	[root@localhost ~]#
	root代表当前登录用户，root是管理员。
	localhost：当前计算机的主机名。
	~：当前所在目录（家目录）
	#：超级用户的提示符(当前登录是管理员)
	$：普通用户提示符.

命令格式
	命令 [选项] [参数]
	[]可以省略。
    注意：多个选项可以写在一起，简化选项与完整选项 -a,—-all.

查询目录中内容：ls	
    ls [选项] [文件或目录]
  选项：
	-a  显示所有文件，包括隐藏文件。—-all
	-l  显示详细信息。—-long
	-d  查看目录属性
	-h  人性化显示文件大小
	-i  显示inode（后面会说什么是i节点号，硬链接）

	ls -lh:会显示出文件大小的单位

-rw-r—-r—-  ：u所有者user，g用户组group，o其他人other
   d目录，-文件，l软连接文件。
   rwx ：读，写，执行。

drwxr-xr-x   3 kiroro  staff   102 10 27 16:10 Algorithm
	3代表引用计数，kiroro当前用户，staff当前用户组。
	102文件大小，单位Byte。
	10 27:10月27日最后一次修改时间。
	
- - - - - - - - - - - — - - - - - - - - - - - 
目录(文件)处理命令
	建立目录，处理文件	

    目录处理命令、文件处理命令、链接命令。
    一切皆文件，目录也是文件。
- - - - - - - - - - - — - - - - - - - - - - -
建立目录：mkdir
    mkdir -p [目录]
    -p 递归创建，先创建前面的目录，再建后面的目录。    mkdir -p japan/cang
    命令英文原意：make directory
- - - - - - - - - - - — - - - - - - - - - - -   
切换所在目录：cd
    cd [目录]    英文：change directory
    简化操作：
	cd ~		进入当前用户的家目录
	cd  		也是进入家目录
	cd -		进入上一次目录
	cd ..		进入上一级目录
	cd .		进入当前目录

相对路径
	参照当前所在目录，进行查找

绝对路径
	从根目录开始制定，一级一级递归查找。
- - - - - - - - - - - — - - - - - - - - - - -
查看当前目录：pwd
	print working directory
- - - - - - - - - - - — - - - - - - - - - - -
删除空目录：rmdir
	remove directory，用的很少
- - - - - - - - - - - — - - - - - - - - - - -
删除文件或目录：rm
	rm -r 删除文件，但会询问是否要删除
	rm -rf 不会询问，f=force 强制，删除了则不会还原。
选项：
	-r	删除沐浴露
	-f	强制
- - - - - - - - - - - — - - - - - - - - - - -
复制命令：cp
	cp [选项][源文件或目录][目标目录]
选项：
	-r	赋值目录
	-p	连带文件属性复制：如时间参数
	-d	若源文件是链接文件，则赋值链接属性
	-a	相当于 -pdf，目标文件与源文件完全一样
- - - - - - - - - - - — - - - - - - - - - - -
剪切或改名命令：mv
	mv[源文件或目录][目标目录]
	英文：move
	如果源文件和目标文件在同一目录下是改名，不在是剪切。
- - - - - - - - - - - — - - - - - - - - - - -
常见目录作用
	/	 根目录
	/bin	 保存系统命令，同根下面的bin和sbin，usr下的bin和sbin。sbin下的命令只有超级用户才能执行，而bin下的普通用户也可执行。

	/boot	 启动目录，保存的是用户的启动数据。不能写满。
	/dev	 特殊文件保存目录
	/etc	 配置文件保存目录
	/home	 普通用户家目录
	/root	 超级用户家目录
	/lib	 函数库保存
	/misc	 挂磁带机
	/mnt	 挂U盘
	/media 挂光盘
	以上三个是空目录。可以用来外接存储设备的盘符。
	/tmp	 保存临时文件，临时数据。
	/proc
	/sys
	以上两个目录不能直接操作，保存的是内存的挂载点。不能往里写东西。
	/usr	 系统软件资源目录
	/usr/bin	系统命令（普通用户）
	/usr/sbin	系统命令（超级用户）
	/var	 保存系统可变文档

可以随意放东西的，最好放在home目录和tmp,。
- - - - - - - - - - - — - - - - - - - - - - -
链接命令：ln
	ln -s [源文件][目标文件]
	英文：link，把源文件拼成一个链接的目标文件。
功能：生成链接文件
选项：
	-s	创建软链接  soft	

    每个文件都有文件索引表（记录一系列inode号），对应物理存储的block块。

硬链接特征：（不建议创建）
	1.拥有相同的i节点（inode号）和存储block块，可以看做是同一个文件。
	2.可通过i节点识别。
	3.不能跨分区
	4.不能针对目录使用。只有文件可以创建硬链接。
	5.若修改一个文件，另一个也修改了。一个删除，另一个还可以使用。

描述：一个文件有一个硬链接，就是两个文件指的是同一个地方的东西。	
	链接数会+1.

软连接特征：
	1.类似windows的快捷文件
	2.软连接拥有自己的i节点和block块，但是数据块中只保存源文件的文件名和i节点号，并没有实际的文件数据。
	3.lrwxrwxrwx  l软连接，软连接文件权限都为rwxrwxrwx
	4.修改任意文件，另一个都改变
	5.删除原文件，软连接不能使用。	

软连接，源文件一定要写绝对路径，有可能就找不到。
硬链接，没有以上限制。
- - - - - - - - - - - — - - - - - - - - - - -
文件搜索命令：locate	
命令搜索命令：whereis 与 which
文件搜索命令：find
字符串搜索命令：grep
find命令与grep命令的区别

locate速度比find快，find会全部文件遍历一遍。

文件搜索命令：locate	
	locate 文件名
	在后台数据库按文件名，搜索文件，速度比较快。
	不能搜索新创建的文件，因为会在指定搜索的后台数据库搜。
	/var/lib/mlocate  后台数据库。每天更新一次。

	updatedb 	更新数据库
	缺点：只能按照文件名搜索。

/etc/updatedb.conf 配置文件
	PRUNE_BIND_MOUNTS = “yes”		开启搜索命令
	PRUNEFS = 		搜索时不搜索的文件系统
	PRUNENAMES		搜索时不搜索的文件类型
	PRUNEPATHS		搜索时不搜索的路径。

- - - - - - - - - - - — - - - - - - - - - - -
命令搜索命令：whereis 与 which

	whereis 命令名
  只能查系统命令，以及显示帮助文档。
	whoami  当前用户
	whatis  这个命令干什么

    which	能查看到命令的别名，命令所在位置。


- - - - - - - - - - - — - - - - - - - - - - -
环境变量：PATH
	定义的是系统搜索命令的路径。
	echo $PATH 查看path路径。命令从环境变量里找。

- - - - - - - - - - - — - - - - - - - - - - -
find命令
	find [搜索范围][搜索条件]
	
如：find / -name install.log
	搜索需要名字一模一样。

注意：要避免大范围搜索，会运行慢，浪费系统资源。
	find是在系统当中搜索复合条件的文件名，需要使用通配符匹配。
如：find /root -name “ab[cd]”

	find /root -iname install.log
	#不区分大小写
	
	find /root -user root	
	#搜索所有者是user的文件。
	
	find /root -nouser
	#查找没有所有者的文件，很可能事垃圾文件，可以清除。

	find /var/log/ -mtime +10
	#查找10天前修改的文件，m意思是modify，修改。
	
	-10	10天内修改文件
	10	10天当天修改的文件
	+10	10天前修改的文件
	
	atime		文件访问时间
	ctime		改变文件属性
	mtime		修改文件内容
	
按照文件大小来搜索
	find . -size 25k
	#搜索当前文件是25k的，-25k小于25k，M兆字节，大写。
	一定要加单位，默认单位是数据块。按照硬盘扇区512Byte

	find . -inum 262422
	#查找i节点是262422的文件
	
逻辑与，或
	find /etc -size +20k -a -size -50k
	-a：逻辑与，同时满足
	-o：逻辑或，满足其中一个条件即可
	
	find /etc -size +20k -a -size -50k -exec ls -lh {} \;
	#查找满足条件的文件，并显示详细信息。
	#-exec 命令 {}\：对搜索结果执行操作。{}\是固定格式

- - - - - - - - - - - — - - - - - - - - - - -
字符串搜索命令grep
	grep [选项] 字符串 文件名
	#在文件当中搜索复合条件的字符串
选项：
	-i	忽略大小写
	-v	排除指定字符串
	
如：grep “size”	xx.txt  ,不加“”也可以


- - - - - - - - - - - — - - - - - - - - - - -
find 与 grep 命令的区别

	find：在系统当中搜索符合条件的文件名，使用通配符匹配，通配符是完全匹配。
	grep：在文件当中搜索符合条件的字符串，如果需要匹配，使用正则表达式进行匹配，正则表达式是包含匹配。
- - - - - - - - - - - — - - - - - - - - - - -

=============================================

帮助命令
	
帮助命令man , manul文档
其他帮助命令

帮助命令man
	man 命令
	#获取指定命令的帮助

  man ls 
#查看ls的帮助
  
man的级别
	1：查看命令的帮助
	2：查看可被内核调用的函数的帮助
	3：函数函数库
	4：特殊文件的帮助，主要是/dev目录下的文件
	—9

查看命令拥有几个级别的帮助
	man -f 命令
相当于
	whatis 命令
	whereis 命令

举例：
	man -5 passwd
	man -4 null
	man -8 ifconfig

查看和命令相关的所有帮助
	man -k 命令
相当于
	apropos 命令
    所有包含有这个关键字的帮助信息。
- - - - - - - - - - - — - - - - - - - - - - -
其他帮助命令

选项帮助
	命令 —-help
如：
	ls —-help

shell内部帮助命令
	help shell内部命令，如：help cd
	#获取shell内部命令的帮助

    有些命令是shell自带的，如果whereis 命令 能找到命令在哪，则是外来的，否则是自带的。	

如：
  *   whereis cd
	#确定命令是否是shell内部命令
	
详细命令帮助info
	info 命令
- - - - - - - - - - - — - - - - - - - - - - -
=============================================
压缩命令
	
常用压缩格式：.zip  .gz   .bz2   
		.tar.gz  .tar.bz2

.zip格式压缩
压缩文件
	zip 压缩文件名 源文件
如： zip longz.zip longz   不一定需要加扩展名.zip，但为了好区分。

压缩目录
	zip -r 压缩文件名 源目录
如： zip -r long.zip long

.zip格式解压缩
	unzip 压缩文件
- - - - - - - - - - - — - - - - - - - - - - -
.gz格式压缩
	gzip 源文件
	#压缩为.gz格式的压缩文件，源文件会消失
    
	gzip -c 源文件 > 压缩文件
	#压缩为.gz格式，源文件保留。
如：gzip -c long > long.gz

	gzip -r 目录
	#压缩目录下所有的子文件，但是不能压缩目录。

.gz格式解压缩
解压缩文件
	gzip -d 压缩文件
解压缩文件
	gunzip 压缩文件
- - - - - - - - - - - — - - - - - - - - - - -
.bz2格式压缩
压缩为.bz2格式，不保留源文件
	bzip2 源文件

压缩之后保留源文件
	bzip2 -k 源文件

bzip2命令不能压缩目录
- - - - - - - - - - - — - - - - - - - - - - -
.tar.gz
.tar.bz2  

.tar是打包

打包命令tar
	tar -cvf 打包文件名 源文件
选项：
	-c ： 打包
	-v ： 显示过程
	-f ： 指定打包后的文件名

如： tar -cvf longzls.tar longzls

再用 gzip bzip2
解决目录压缩问题，先tar打包。

.tar解压缩
	tar -xvf 打包文件名
选项：
	-x ： 解打包。
如：tar -xvf longlz.tar
- - - - - - - - - - - — - - - - - - - - - - -
.tar.gz 压缩格式
	其实.tar.gz是先打包成tar格式，再压缩为.gz格式

压缩文件 
	tar -zcvf 压缩包名.tar.gz 源文件
选项：
	-z ： 压缩为.tar.gz格式

解压缩
	tar -zxvf 压缩包名.tar.gz
选项
	-x ： 解压缩.tar.gz格式
- - - - - - - - - - - — - - - - - - - - - - -
.tar.bz2 压缩格式
压缩文件 
	tar -jcvf 压缩包名.tar.bz2 源文件
选项：
	-z ： 压缩为.tar.bz2格式

解压缩
	tar -jxvf 压缩包名.tar.gz
选项
	-x ： 解压缩.tar.bz2格式
===============================================

关机与重启命令

shutdown命令
	shutdown [选项]时间
  关机和重启会保存当前的资料
选项：
	-c ：取消前一个关机命令
	-h ：关机
	-r ：重启
如：shutdown -r 05：30 & 
	加&，在后台执行
    shutdown now
	现在关机

关机其他命令
	halt 
	poweroff 
	init 0
  以上三个不太安全，可能不会正确保存

其他重启命令
	reboot     这个比较安全
	init 6     

系统运行级别
	0	关机
	1	单用户，像windows的安全模式，用在程序出现问题时。启动最小程序
	2	不完全多用户，不含NFS服务
	3	完全多用户
	4	未分配
	5	图形界面
	6	重启

runlevel 查看当前运行级别
	
退出登录命令
	logout
   	    windows里叫注销。
===============================================
挂载命令

用户登陆查看和用户交互命令
	
如插入U盘，需要人为分配盘符，即挂载。

查询与自动挂载，查看系统已经分配的挂载设备
	mount 

依据配置文件/etc/fstab的内容，开机自动挂载
	mount -a
	
光盘U盘不要写成自动挂载，如果你开机时没插U盘，系统就起不来。

挂载命令格式
	mount [-t 文件系统][-o 特殊选项]设备文件名 挂载点
选项
	-t 文件系统：加入文件系统类型来指定挂载的类型，可以ext3、ext4、iso9660等文件系统。
	-o 特殊选项：可以指定挂载的额外选项（有很多）

    文件系统就是格式化要做的事情，什么fat nfts，把分区分割成等大小的块，分配i节点。

如：mount -o remount,noexec /home/
记得一定要改回来：
    mount -o remount,exec /home/

脚本文件里，第一句一定加 #!/bin/bash

挂载光盘
	1.建立挂载点
	mkdir /mnt/cdrom       /mnt里面就是空的让用户挂载用的
	2.挂载光盘
	mount -t iso9660 /dev/cdrom /mnt/cdrom
	或 mount /dev/sr0 /mnt/cdrom

卸载光盘
	windows中U盘不卸载数据可能丢，Linux一定要卸载
	umount 设备文件名或挂载点
如：
	umount /mnt/cdrom

挂载U盘
查看U盘设备文件名，走的是硬盘路径。所以名称是不确定的。
	fdisk -l
挂载U盘
	mount -t vfat /dev/sdb1 /mnt/usb

Linux默认是不支持NTFS文件系统的，所以移动硬盘Linux不支持。要加条NTFS驱动。
- - - - - - - - - - - — - - - - - - - - - - -
用户登陆查看命令：w
	w 用户名
或 直接 w 回车
TTY：从哪个终端登陆

查看登陆用户信息：who
	who 
命令输出：
	用户名，登陆终端，登陆时间

查看当前登陆和过去登陆的用户信息：last
	last
	last命令默认读取/var/log/wtmp 文件数据，不能直接看，是二进制文件。
命令输出：
	用户名、登陆终端、登陆IP、登陆时间、退出时间（在线时间）

查看所有用户的最后一次登陆时间：lastlog
	lastlog
	lastlog命令默认读取/var/log/lastlog 文件数据
命令输出：
	用户名、登陆终端、登陆IP、最后一次登陆时间
============================================================
Shell基础
	一、Shell概述
	二、脚本执行方式
	三、Bash的基本功能

1.Shell是什么
	* 命令行解释器，为用户提供一个向Linux内核发送请求以便运行程序的界面系统级程序，用户可以用shell来启动、挂起、停止甚至是编写一些程序。

	* Shell还是一个功能强大的编程语言，易编写、易调试、灵活性强。Shell是解释执行的脚本语言，在Shell中可以直接调用Linux系统命令。

2.Shell的分类
	Bourne Shell ：1979年开始，主文件名.sh，基本淘汰
	C Shell ： BSD版的Unix系统中使用，语法与C语言相似。
   以上两种语法彼此不兼容。Bourne家族主要包括：sh、ksh、Bash、psh、zsh。
	C家族主要包括：csh、tcsh

Linux支持的shell
	/etc/shells文件里有。

- - - - - - - - - - - — - - - - - - - - - - -
脚本执行方式

1.echo输出命令
	echo [选项][输出内容]
选项：
	-e ： 支持反斜线控制的字符转换。
	输出有空格，需要加“”
如：echo “hello world”

十六进制的输出
	echo -e “\x6c”
	6c为ACSII码转换成，为 l

输出颜色
	echo -e “\e[1;31m 家人 \e[0m”
	\e : 调用颜色
	[1 : 开启颜色选项
	\e[0 : 关闭颜色
	31m : 红色

2.第一个脚本
	vi hello.sh

	#!/bin/bash
	#The first program

3.脚本执行
	赋予执行权限，直接运行
	chmod 755 hello.sh
	./hello.sh

	通过Bash调用执行脚本
	bash hello.sh

- - - - - - - - - - - — - - - - - - - - - - -
Bash的基本功能
	
1.命令别名与快捷键
2.历史命令
3.输出重定向
4.多命令顺序执行
5.Shell中特殊符号

什么是别名
	命令别名==人的小名

查看默认生效的别名
	alias
取别名，命令行是临时生效
	alias ls = ’ls —color=never’

查看与设定别名
	alias 别名=‘原命令’

别名永久生效与删除别名
	写入环境变量
	vi ~/.bashrc
	重启就能生效，直接生效 可以用 source .bashrc

删除别名，临时删除，彻底删除需要在配置文件中删
	unalias 别名

命令生效顺序
    第一顺位：用绝对路径或相对路径执行的命令
    第二顺位：别名
    第三顺位：Bash的内部命令
    第四顺位：$PATH环境变量定义的目录顺序查找到的第一个命令

查看环境变量
	echo $PATH

清屏
	clear

- - - - - - - - - - - — - - - - - - - - - - -
历史命令

	history [选项][历史命令保存文件]
选项：
	-c ： 清空历史命令
	-w ： 把缓存中的历史命令写入历史命令保存文件~/.bash_history

    历史命令默认会保存1000条，可以在环境变量配置文件 /etc/profile中进行修改。
	修改，HISTSIZE=10000

历史命令调用	
	1.使用上下箭头
	2.!n 重复执行第n条历史记录
	3.!! 重复执行上一条命令
	4.!子串 重复执行最后一条以该子串开头的命令

如：mysql.server start
   用!mys简化操作。

使用Tab键进行命令补全，依赖的是$PATH中的环境变量。
- - - - - - - - - - - — - - - - - - - - - - -
输入&输出重定向

1.标准输入输出
  设备		设备文件名	文件描述符	类型
  键盘		/dev/stdin	   0	    标准输入
  显示器	/dev/stdout   1	    标准输出
  显示器	/dev/stderr   2	    标准错误输出

2.输出重定向

   类型		   符号 			作用

标准输出重定向      命令 > 文件		    以覆盖的方式
 			 命令 >> 文件	    以追加的方式

标准错误输出重定向    错误命令 2>文件     覆盖
			  错误命令 2>>文件	    追加


正确输出和错误输出    命令 > 文件 2>&1     把正确输出与错误输出都保存都
同时保存	        命令 >> 文件 2>&1    到一个文件中
			  命令 &>文件	      同上
			  命令 &>>文件
			  命令>>文件one 2>>文件two  正确到1，错误到2

   注意以上的空格！！！注意！
   记录报错信息，如警告出错的提示重定向到文件当中。
定时执行一些程序 ifconfig？

3.输入重定向
	wc [选项][文件名]
  英文：word count
选项：
	-c ： 统计字节数
	—w ： 统计单词书
	-l ： 统计行数
ctrl+d 结束

把文件作为命令的输入
	命令 < 文件 
	命令 << 标识符
标识符把标识符之间内容作为命令的输入
如：wc < accss.log
   wc << ddy
->dkdlksgj
->kdjfkjds
->ddy
一直输入到同<<后面的单词相同，结束。

- - - - - - - - - - - — - - - - - - - - - - -
管道符

1.多命令顺序执行
  执行符	    格式		   作用
    ;		命令1 ;命令2        不管前面的命令是否正确执行
   &&      命令1 && 命令2	   只有前面执行正确才会执行后面的
   || 	命令1 || 命令2	   命令1不正确执行，命令2才会执行
					   命令1正确执行，命令2不会执行

查看执行命令时间
	date && tar -zcvf etc.tar.gz /etc && date

查看命令是否正确执行
	ls && echo yes || echo no

2.管道符
	命令1 | 命令2
  命令1的操作结果作为命令2的输入

查看系统中所有网络连接
	netstart

ESTABLISHED：连接的状态
- - - - - - - - - - - — - - - - - - - - - - -
通配符

1.通配符

    通配符		作用
	?	   匹配一个任意字符
	*	   0个或多个任意字符，就是匹配任意内容
	[]	   括号内的任意一个[AB]
	[-]	   -范围，[a-z]匹配一个小写字母
	[^]	   ^非，匹配不是中括号内的一个字符，[^0-9]匹配一个不是数字

通配符用于匹配目录名或文件名。若要匹配文件中内容，需要用正则表达式。

2.Bash中的特殊符号

	符号		作用
	‘’		单引号，在单引号中的所有特殊符号都没有特殊含义。
	“”		双引号，同上，但”$” ”’” ”\”是例外
	$()		系统命令，同反引号``
	#		在Shell脚本中，#代表注释
	$		用于调用变量的值，如$name
	\		转义，\$则当做符号，而不是变量引用。

如：
	 变量 a=`ls`  是先执行ls命令，然后将其结果赋给变量a。
	bb = $(ls) ，同上

=================================================================
Linux第二部分

磁盘管理
用户管理

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
磁盘管理
用了多少空间，剩余空间，一些文件占用了多少空间，添加硬盘。

查看磁盘分区使用状况
	df
选项：
	-l 仅显示本次磁盘
	-a 显示所有文件系统的磁盘使用情况，如/proc/
	-h 以1024进制计算最合适的单位显示磁盘容量
	-H 以1000进制显示磁盘容量
	-T 显示磁盘分区情况
	-t 显示指定类型文件系统的磁盘分区
	-x 不显示指定类型文件系统的磁盘分区

统计磁盘上的文件大小
	du
选项：
	du -s codes/  针对特定文件夹统计大小
	du -sb codes/  以k为单位
	du -sm codes/  以MB为单位
	du -sh codes   以1024进制
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
磁盘分区与格式化
	
1.主分区与扩展分区总数不能超过4个
2.前面有提到。

硬盘空间消耗殆尽怎么办
	在保留原有硬盘的基础上，给服务器添加新硬盘。

在VM中添加硬盘
	
MBR分区
	必须对硬盘进行分区、格式化、挂载后才能使用。

分区
	使用硬盘分区工具fdisk

fdisk /dev/xxx  进入分区模式等
	。。。

=================================================

用户与用户组

用户：使用操作系统的人
用户组：在操作系统中具有相同权限的一组用户。

/etc/group里存储当前系统中所有用户组信息
Group:      x     :  123 :abc,def,xyz
组名称: 组密码占位符 : 组编号: 组中用户名列表

/etc/gshadow 存储当前系统中用户组的密码信息
Group:  x    :        :abc, def,xyz
组名称: 组密码 : 组管理者: 组中用户名列表

/etc/passwd 存储当前系统中所有用户的信息
root:*:0:0:System Administrator:/var/root:/bin/sh
用户名：密码占位符：用户编号：用户组编号：用户注释信息：用户主目录：shell类型。

root的用户编号肯定是0。

/etc/shadow 存储当前系统中用户的密码信息
root:*mxnge:::::
用户名：密码：:::::

- - - - - - - - - - - - - - - - - - - - - - - - - - - -
用户与用户组的基本命令

分配一个服务器，给每个部门分配一个用户组。

创建一个用户组
	groupadd 用户组名称
如：groupadd apple

修改用户组名称
	groupmod -n market apple  

修改组编号
	groupmod -g 668 market

创建用户组同时，指定用户组编号
	groupadd -g 888 boss

删除用户组
	groupdel market

删除用户组之前需要先删除用户

- - - - - - - - - - - - - - - - - - - - - - - - 
用户命令

往用户组里添加用户,默认会创建同名文件夹
	useradd -g 组名 username

创建用户时指定用户个人文件夹，会创建同名的用户组
	used -d /home/xxx username

给用户添加备注
	usermod -c 备注 username

修改用户名
	usermod -l newName oldName

删除用户，但不会删除文件
	userdel username

删除用户，同时删除个人文件
	userdel -r username

暂停普通用户登录服务器
	在etc目录下创建nologin,就可以禁止除root外的用户登陆
    touch /etc/nologin

- - - - - - - - - - - - - - - - - - - - - - - - 
用户与用户组进阶命令

锁定账户命令
	passwd -l username

解锁账户命令
	passwd -u username

使账户无密码登录
	passwd -d username

主要组与附属组
1.用户可以属于多个用户组：一个主要组，多个附属组

给用户增加附属组
	gpasswd -a 用户名 附属组名称,附属组2

切换到附属组
	newgrp 附属组名称 组密码

删除附属组
	gpasswd -d 用户名 附属组名称,附属组2

创建用户既指定主要组与附属组
	useradd -g group1 -G group2,group3

给用户组设置罪吗
	gpasswd 组密码
  接着系统提示设置组密码

- - - - - - - - - - - - - - - - - - - - - - - - 
其他命令

切换当前用户身份
	su 用户名
不加名称，则可以切换到root

显示当前登陆的用户名
	whoami

显示指定用户信息，包括用户编号，名称，组编号等	
	id 用户名

显示用户所在的用户组
	groups 用户名

设置用户资料，一次输入用户资料
	chfn 用户名

显示用户详细资料
	finger 用户名










	




	



	


	


	
		


	
     
     


	
	
	


















